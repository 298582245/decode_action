//Tue Sep 02 2025 04:35:49 GMT+0000 (Coordinated Universal Time)
//Base:<url id="cv1cref6o68qmpt26ol0" type="url" status="parsed" title="GitHub - echo094/decode-js: JS混淆代码的AST分析工具 AST analysis tool for obfuscated JS code" wc="2165">https://github.com/echo094/decode-js</url>
//Modify:<url id="cv1cref6o68qmpt26olg" type="url" status="parsed" title="GitHub - smallfawn/decode_action: 世界上本来不存在加密，加密的人多了，也便成就了解密" wc="741">https://github.com/smallfawn/decode_action</url>
const crypto = require("crypto");
(function () {
  try {
    const _0x2c79c9 = "";
    const _0x3f7518 = Buffer.from(_0x2c79c9, "base64").toString("utf8");
    const _0x3350fb = JSON.parse(_0x3f7518);
    const _0x5b400c = crypto.pbkdf2Sync("Ku!^UmTd/rLK=oC=@6-MbmQ0C(HV?<7N", Buffer.from(_0x3350fb.salt, "hex"), _0x3350fb.iter, 32, "sha1");
    const _0x360a08 = crypto.createDecipheriv("aes-256-cbc", _0x5b400c, Buffer.from(_0x3350fb.iv, "hex"));
    let _0x2267ee = _0x360a08.update(Buffer.from(_0x3350fb.ct, "base64"));
    _0x2267ee = Buffer.concat([_0x2267ee, _0x360a08.final()]);
    eval(_0x2267ee.toString("utf8"));
  } catch (_0x136ee7) {
    console.error("解密失败:", _0x136ee7);
  }
})();
